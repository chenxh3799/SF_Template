<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>
		代码生成器配置文件: 
		1.会为所有的property生成property_dir属性,如pkg=com.company => pkg_dir=com/company
		2.可以引用环境变量: ${env.JAVA_HOME} or System.properties: ${user.home},property之间也可以相互引用
	</comment>
	
	<!-- 需要根据实际情况改动的部分  开始-->
	
	<!-- basepackage 包命名路径，开发中需要根据具体情况需要此路径，但开头必须是com.sinolife,存放公用的java文件 -->
	<entry key="commonspackage">com.sinolife.commons</entry>
	<!-- basepackage 包命名路径，开发中需要根据具体情况需要此路径，但开头必须是com.sinolife -->
	<entry key="basepackage">com.sinolife.image</entry>	
	<!-- jsp 生成路径: web/${namespace}/${className}/list.jsp -->
	<entry key="namespace">views</entry>
	<!-- 代码生成器生成的文件输出路径，默认为当前路径下的generator-output文件夹，可以修改-->
	<entry key="outRoot">D:\generator-output</entry>
	
	<!-- 需要根据实际情况改动的部分  结束-->
	
	
	

	
	<!-- 数据库配置部分  开始-->
	
	<!-- 需要移除的表名前缀,使用逗号进行分隔多个前缀,示例值: t_,v_ -->
	<entry key="tableRemovePrefixes"></entry>
	<!--
	<entry key="jdbc.username">hgw</entry>
	<entry key="jdbc.password">sino1234</entry>		
	  oracle需要指定jdbc.schema,并且要大写，其它数据库忽略此项配置   
	<entry key="jdbc.schema">HGW</entry>
	<entry key="jdbc.url">jdbc:oracle:thin:@192.168.0.164:1530:dde1</entry>
	
	
	--><entry key="jdbc.username">ovsee</entry>
	<entry key="jdbc.password">life12345</entry>		
	  <!--  oracle需要指定jdbc.schema,并且要大写，其它数据库忽略此项配置   -->
	<entry key="jdbc.schema">PUBLIC</entry>
	<entry key="jdbc.url">jdbc:oracle:thin:@192.168.0.161:1530:slisint</entry>
	
	
	<!--<entry key="jdbc.username">lifeman</entry>
	<entry key="jdbc.password">lifetest</entry>		
	   oracle需要指定jdbc.schema,并且要大写，其它数据库忽略此项配置  
	<entry key="jdbc.schema">PUBLIC</entry>
	<entry key="jdbc.schema">LIFEMAN</entry>
	<entry key="jdbc.url">jdbc:oracle:thin:@192.168.0.159:1521:lbs</entry>
	--><!--
	<entry key="jdbc.catalog"></entry>
	-->
	<entry key="jdbc.driver">oracle.jdbc.driver.OracleDriver</entry>
	
	<!-- 数据库配置部分  结束-->
	
	
	<!-- 数据库类型至java类型映射  -->
	<entry key="java_typemapping.java.sql.Timestamp">java.util.Date</entry>
	<entry key="java_typemapping.java.sql.Date">java.util.Date</entry>
	<entry key="java_typemapping.java.sql.Time">java.util.Date</entry>	
	<entry key="java_typemapping.java.lang.Byte">Integer</entry>
	<entry key="java_typemapping.java.lang.Short">Integer</entry>
	<entry key="java_typemapping.java.math.BigDecimal">Long</entry>
	<entry key="java_typemapping.java.sql.Clob">String</entry>	

</properties>