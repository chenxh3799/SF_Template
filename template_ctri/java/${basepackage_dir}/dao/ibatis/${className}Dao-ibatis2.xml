<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameLower = className?uncap_first> 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="${basepackage}.dao.${className}Dao">
	
	 <!-- 查询sql结果与java model映射-->
	 <resultMap id="${className}.ResultMap" class="${basepackage}.domain.${className}">
        <#list table.columns as column>
         <result property="${column.columnNameLower}" column="${column.sqlName}"/>
		</#list>       
     </resultMap>

     
    <!-- 公用查询列表sql-->
    <sql id="${className}.Columns">
	    <![CDATA[
	    <#list table.columns as column>"${column.sqlName}" <#if column_has_next>,</#if></#list>
	    ]]>
	</sql>
	
	
    <!-- 公用where条件sql-->
    <sql id="${className}.dynamic.where">
	    <dynamic prepend="WHERE">
	    	 <#list table.columns as column>
		       <isNotEmpty prepend="AND" property="${column.columnNameLower}">
		             "${column.sqlName}" = #${column.columnNameLower}#
		       </isNotEmpty>		      			
	       </#list>
	    </dynamic>	
	</sql>
			
    
    <!-- 删除 -->
    <delete id="remove${className}ByPK" parameterClass="java.util.Map">
    	<![CDATA[
	        DELETE FROM "${table.sqlName}" WHERE
	        <#list table.compositeIdColumns as column>
	          <#if column.isDateTimeColumn>
		          "${column.sqlName}" = to_date(#${column.columnNameLower}#,'yyyy-MM-dd') <#if column_has_next> AND </#if>
		      <#else>
		          "${column.sqlName}" = #${column.columnNameLower}# <#if column_has_next> AND </#if>
		      </#if>        
			</#list>
    	]]>
    </delete>
    
     <!-- 修改 -->
    <update id="update${className}"  parameterClass="${basepackage}.domain.${className}">
         <![CDATA[
	        UPDATE ${table.sqlName} SET
		        <#list table.notPkColumns as column>
		        "${column.sqlName}" = #${column.columnNameLower}# <#if column_has_next>,</#if>
		        </#list>
	        WHERE 
	        	<#list table.compositeIdColumns as column>
		        "${column.sqlName}" = #${column.columnNameLower}# <#if column_has_next> AND </#if>
		        </#list>
    	  ]]>
    </update>
    
    <!-- 保存 -->
      <insert id="add${className}" parameterClass="${basepackage}.domain.${className}" >
      	 <![CDATA[
		        INSERT INTO "${table.sqlName}" (
		        <#list table.columns as column>
		        	"${column.sqlName}" <#if column_has_next>,</#if>
		        </#list>
		        ) VALUES (
		        <#list table.columns as column>
		        	#${column.columnNameLower}# <#if column_has_next>,</#if>
		        </#list>        
		        )
		    ]]>
    </insert>
    
     
     <!-- 根据主建获取对象 -->
     <select id="get${className}ByPK" parameterClass="java.util.Map" resultMap="${className}.ResultMap">
     	SELECT <include refid="${className}.Columns"/>
	    <![CDATA[
	        FROM "${table.sqlName}" 
	        WHERE
                <#list table.compositeIdColumns as column>
		          <#if column.isDateTimeColumn>
			          "${column.sqlName}" = to_date(#${column.columnNameLower}#,'yyyy-MM-dd') <#if column_has_next> AND </#if>
			      <#else>
			          "${column.sqlName}" = #${column.columnNameLower}# <#if column_has_next> AND </#if>
			      </#if>        
				</#list>
	    ]]>	     
    </select>
       
    
    <!-- 获取列表总记录数，分页用 -->
    <select id="getMatched${className}Count" parameterClass="java.util.Map"  resultClass="java.lang.Integer"> 
         select count(*) from  "${table.sqlName}"
        <include refid="${className}.dynamic.where"/>
    </select>
    
    <!-- 获取列表值，分页用 -->
	 <select id="getMatched${className}Page"  parameterClass="java.util.Map"  resultMap="${className}.ResultMap">
          SELECT <include refid="${className}.Columns"/> from (
          SELECT rownum as rnb,  <include refid="${className}.Columns"/>
          from  "${table.sqlName}"
          <include refid="${className}.dynamic.where"/>
          order  by  "${table.pkColumn.sqlName}"
          )
          where rnb <![CDATA[ >=  ]]> #req.startRow#  AND rnb <![CDATA[ <= ]]> #req.endRow#
    </select>
	
</sqlMap>

